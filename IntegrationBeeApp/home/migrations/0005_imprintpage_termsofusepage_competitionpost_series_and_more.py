# Generated by Django 5.0 on 2024-10-17 11:47

import django.db.models.deletion
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0004_alter_contactspage_our_team'),
        ('wagtailcore', '0089_log_entry_data_json_null_to_object'),
    ]

    operations = [
        migrations.CreateModel(
            name='ImprintPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('imprint', wagtail.fields.RichTextField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TermsOfUsePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('terms_of_use', wagtail.fields.RichTextField(null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AddField(
            model_name='competitionpost',
            name='series',
            field=wagtail.fields.StreamField([('series', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(help_text='Name of the series (e.g., Semifinal, Blitz)', max_length=255, required=True)), ('integrals', wagtail.blocks.StreamBlock([('integral', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(help_text='Simple reference name', max_length=255, required=True)), ('latex_code', wagtail.blocks.TextBlock(help_text='LaTeX code for the integral', required=True)), ('solution', wagtail.blocks.TextBlock(help_text='Full solution in LaTeX format', required=True)), ('answer', wagtail.blocks.CharBlock(help_text='The final answer', max_length=255, required=True)), ('author', wagtail.blocks.CharBlock(help_text='Author of the integral', max_length=100, required=True)), ('added_by', wagtail.blocks.CharBlock(help_text='Who added the integral', required=False)), ('difficulty_level', wagtail.blocks.IntegerBlock(default=1, help_text='Difficulty level (1-10)', max_value=10, min_value=1)), ('position', wagtail.blocks.IntegerBlock(help_text='Position within the series', required=True))]))], help_text='Integrals belonging to this series', required=True))]))], blank=True, null=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='contactspage',
            name='our_team',
            field=wagtail.fields.StreamField([('team_member', wagtail.blocks.StructBlock([('name', wagtail.blocks.CharBlock(help_text='add name', required=True)), ('role', wagtail.blocks.CharBlock(help_text='add role', required=True)), ('contacts', wagtail.blocks.TextBlock(help_text='add contacts', required=True)), ('picture', wagtail.images.blocks.ImageChooserBlock())]))], blank=True, null=True, use_json_field=True),
        ),
    ]
