# Generated by Django 5.0 on 2024-10-16 21:14

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('max_participants', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IntegralSolution',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('solution', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='IntegralsSeries',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('time_per_integral', models.IntegerField(default=180)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('institution', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('program_of_study', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('name_pronunciation', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_info', models.TextField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='user_pictures/profile_pictures/')),
                ('is_verified', models.BooleanField(default=False)),
                ('registration_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_login_date', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailVerificationToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=300)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForgotPasswordToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=300)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Integral',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('position', models.IntegerField()),
                ('integral', models.TextField()),
                ('difficulty', models.IntegerField(blank=True, null=True)),
                ('author', models.TextField(blank=True, null=True)),
                ('solution', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.integralsolution')),
                ('Series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrals', to='api.integralsseries')),
            ],
        ),
        migrations.CreateModel(
            name='UserToCompetitionRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('P', 'Pending Request'), ('R', 'Request Accepted'), ('N', 'Not Qualified'), ('Q', 'Qualified'), ('E', '1/8 Finalist'), ('F', '1/4 Finalist'), ('S', 'Semifinalist'), ('T', '2nd Place'), ('W', 'Won')], default='P', max_length=1)),
                ('Competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.competition')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='competition',
            name='participants',
            field=models.ManyToManyField(related_name='competitions', through='api.UserToCompetitionRelationship', to=settings.AUTH_USER_MODEL),
        ),
    ]
